+ [ ] **Establish WebSocket Connection Between Client and Server:**
  - Implement WebSocket communication to enable real-time interaction between clients and the server.

+ [ ] **Enable User to Create a Player with a Nickname:**
  - Develop a user interface where players can input their nicknames. (<HUBBLE>)(Client Side)
  - Implement functionality to create a player entity associated with the provided nickname. (Server Side)

+ [ ] **Enable User to Get into the waiting room:**
  - Implement a unique room system where players can join and wait for the game to start. (<HUBBLE>)(Client Side)
  - Implement a logic to reject players when room is full of capacity. (Server Side)

+ [ ] **Listen for User Messages:**
  - Implement message listening functionality to enable players to communicate with each other via chat. (<HUBBLE>)
  - Implement message sending functionality to enable players to communicate with other via chat. (<HUBBLE>)

+ [ ] **Make Game Start Waiting for New Player:**
  - Develop functionality to start the game only when the required number of players have joined the room.

+ [ ] **Implement Countdown Before Game Start:**
  - Display a countdown timer to inform players about the time remaining before the game starts.

---

+ [ ] **Create the Game Board:**
  - **Randomly Place Walls:** Generate walls at random positions on the game board.
  - **Randomly Place Blocks:** Generate destructible blocks at random positions on the game board.
  - **Randomly Place Power-Ups:** Place power-up items at random positions on the game board.
  - **Randomly Place Players:** Position players at random corners of the game board.
  - **Randomly Place Enemies (If Needed):** Optionally, generate enemy entities at random positions on the game board.

+ [ ] **Listen for Player Actions (Client - Server):**
  - **Move Player:** Implement client-side logic to send movement key pressed and server-side logic to handle player movement, notify other players, and check for power-up pickups.
  - **Place Bomb:** Implement client-side logic to send bomb placement key pressed, create timers for bomb explosions, and notify other players about bomb placement and explosions.

+ [ ] **Listen for Game Events (Client):**
  - **Show Player Movement:** Update the game board to reflect player movement.
  - **Show Bomb and Explosion:** Display bombs and their explosions on the game board.
  - **Handle Damage:** Update the game board and HUD to reflect damage to walls, enemies, and players.
  - **Handle Death:** Update the game board and HUD to reflect the death of entities.
  - **Activate/Deactivate Power-Ups:** Update the HUD to reflect the activation or deactivation of power-up items.
  - **Move Enemies:** Implement server-side logic to handle enemy movement and notify all players.
  - **Show Enemy Movement:** Update the game board to reflect enemy movement.

+ [ ] **Show Game Over Menu:**
  - **Win Game:** Display a victory message when a player wins the game. (<HUBBLE>)
  - **Lose Game:** Display a defeat message when a player loses the game. (<HUBBLE>)

+ [ ] **Optimize Some Func:**